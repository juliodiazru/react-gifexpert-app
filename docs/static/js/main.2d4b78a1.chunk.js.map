{"version":3,"sources":["components/AgregarCategorias.js","helpers/obtenerGifs.js","components/ItemGrillaGif.js","components/GrillaGif.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AgregarCategorias","setCategorias","useState","nombreCategoria","setNombreCategoria","agregarCategoria","trim","length","console","warn","categoria","onSubmit","e","preventDefault","type","value","onChange","target","obtenerGifs","a","url","encodeURI","fetch","response","json","data","imagen","map","i","id","title","images","downsized_medium","ItemGrillaGif","className","src","alt","GrillaGif","loading","state","setState","useEffect","then","imagenes","catch","useFetchGifs","key","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"iNAGaA,EAAoB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAENC,mBAAS,IAFH,mBAE7CC,EAF6C,KAE5BC,EAF4B,KAW9CC,EAAmB,WACjBF,EAAgBG,OAAOC,OAAS,EAChCC,QAAQC,KAAK,kDAEbR,GAAc,SAAAS,GAAS,OAAKP,GAAL,mBAAyBO,OAChDN,EAAmB,MAI3B,OACI,0BAAMO,SAfc,SAACC,GACrBA,EAAEC,iBACFR,MAcI,2BAAOS,KAAK,OAAOC,MAAOZ,EAAiBa,SAlBd,SAACJ,GAAD,OAAOR,EAAmBQ,EAAEK,OAAOF,Y,uBCP/DG,EAAW,uCAAG,WAAOR,GAAP,uBAAAS,EAAA,4DACR,mCACTC,EAFiB,iDAE+BC,UAAUX,GAFzC,6BACR,oCADQ,SAGAY,MAAMF,GAHN,cAGjBG,EAHiB,gBAIAA,EAASC,OAJT,uBAIfC,EAJe,EAIfA,KACFC,EAASD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACHC,GAAID,EAAEC,GACNC,MAAOF,EAAEE,MACTV,IAAKQ,EAAEG,OAAOC,iBAAiBZ,QAThB,kBAYhBM,GAZgB,4CAAH,sDCEXO,EAAgB,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACI,yBAAKc,UAAU,yCACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCsBDO,EAvBG,SAAC,GAAmB,IAAjB3B,EAAgB,EAAhBA,UAAgB,ECFT,SAACA,GAAe,IAAD,EACbR,mBAAS,CAC/BoC,SAAS,EACTb,KAAM,KAH6B,mBAChCc,EADgC,KACzBC,EADyB,KAiBvC,OAXAC,qBAAU,WACNvB,EAAYR,GACPgC,MAAK,SAACC,GACHH,EAAS,CACLF,SAAS,EACTb,KAAMkB,OAGbC,OAAM,SAAAhC,GAAC,OAAIJ,QAAQC,KAAR,oBAA0BG,SAC3C,CAACF,IAEG6B,EDb6BM,CAAanC,GAAzC4B,EAFyB,EAEzBA,QAAeK,EAFU,EAEhBlB,KAEjB,OACI,oCACI,4BAAKf,GACH4B,GAAW,0CACX,yBAAKJ,UAAU,aAETS,EAAShB,KAAI,SAAAD,GACT,OAAO,kBAAC,EAAD,eAAeoB,IAAKpB,EAAOG,IAAQH,UEYnDqB,EAxBM,WAAO,IAAD,EAEa7C,mBAAS,IAFtB,mBAEhB8C,EAFgB,KAEJ/C,EAFI,KAIvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAmBA,cAAeA,IAClC,6BACA,4BAEQ+C,EAAWrB,KAAI,SAAAjB,GACX,OAAO,kBAAC,EAAD,CAAWoC,IAAKpC,EAAWA,UAAWA,UCXrEuC,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.2d4b78a1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AgregarCategorias = ({ setCategorias }) => {\r\n\r\n    const [nombreCategoria, setNombreCategoria] = useState('');\r\n\r\n    const manejarChangeNombreCategoria = (e) => setNombreCategoria(e.target.value);\r\n\r\n    const manejadorSubmit = (e) => {\r\n        e.preventDefault();\r\n        agregarCategoria();\r\n    }\r\n\r\n    const agregarCategoria = () => {\r\n        if (nombreCategoria.trim().length < 3) {\r\n            console.warn('El nombre debe contener al menos 3 caracteres');\r\n        } else {\r\n            setCategorias(categoria => [nombreCategoria, ...categoria]);\r\n            setNombreCategoria('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={manejadorSubmit}>\r\n            <input type=\"text\" value={nombreCategoria} onChange={manejarChangeNombreCategoria}></input>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nAgregarCategorias.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n","export const obtenerGifs = async (categoria) => {\r\n    const apiKey = 'iGYRvoGaVbOyxTyXFGAJ1IxVDIdYW0VZ';\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=${apiKey}`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n    const imagen = data.map((i) => {\r\n        return {\r\n            id: i.id,\r\n            title: i.title,\r\n            url: i.images.downsized_medium.url\r\n        }\r\n    });\r\n    return imagen;\r\n}","import React from 'react'\r\n\r\nexport const ItemGrillaGif = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__pulse\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { ItemGrillaGif } from './ItemGrillaGif';\r\n\r\nconst GrillaGif = ({ categoria }) => {\r\n\r\n    const { loading, data: imagenes } = useFetchGifs(categoria);\r\n\r\n    return (\r\n        <>\r\n            <h3>{categoria}</h3>\r\n            { loading && <p>Cargando...</p>}\r\n            { <div className=\"card-grid\">\r\n                {\r\n                    imagenes.map(imagen => {\r\n                        return <ItemGrillaGif key={imagen.id} {...imagen} />\r\n                    })\r\n                }\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nGrillaGif.propTypes = {\r\n    categoria: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GrillaGif;","import { useEffect, useState } from \"react\"\r\nimport { obtenerGifs } from '../helpers/obtenerGifs';\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    const [state, setState] = useState({\r\n        loading: true,\r\n        data: []\r\n    })\r\n\r\n    useEffect(() => {\r\n        obtenerGifs(categoria)\r\n            .then((imagenes) => {\r\n                setState({\r\n                    loading: false,\r\n                    data: imagenes\r\n                })\r\n            })\r\n            .catch(e => console.warn(`Capturado ${e}`));\r\n    }, [categoria])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AgregarCategorias } from './components/AgregarCategorias';\r\nimport GrillaGif from './components/GrillaGif';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState([]);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AgregarCategorias setCategorias={setCategorias} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categorias.map(categoria => {\r\n                        return <GrillaGif key={categoria} categoria={categoria} />;\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nGifExpertApp.propTypes = {\r\n\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));"],"sourceRoot":""}